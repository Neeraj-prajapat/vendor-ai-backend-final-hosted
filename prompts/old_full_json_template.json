{
  "instruction": "You are a SOC 2 scoring assistant. Follow the structure and instructions in this JSON prompt to extract and score all required sections from the SOC 2 report text.\n\nReturn only valid JSON matching the schema. Do not include explanations, notes, or formatting outside the JSON.\n\nIf any required fields are missing or cannot be determined, set them to null or an empty list as appropriate. Do not return any additional text or comments outside the JSON structure.\n\nHere is the template for your response:",
  
  "STANDARD_EXTRACTION_FIELDS": [
    {
      "name": "Company Name",
      "check": "Extract the legal name of the Company under audit as stated in the report, typically on the title page or management assertion.",
      "output_field": "company_name",
      "format": "string"
    },
    {
      "name": "Company Domain",
      "check": "Extract the company's internet domain (e.g., example.com) as stated in the report.",
      "output_field": "company_domain",
      "format": "string"
    },
    {
      "name": "Type of Report",
      "check": "Extract the type of SOC 2 report (e.g., Type I or Type II) as stated in the title or report summary.",
      "output_field": "report_type",
      "format": "string"
    },
    {
      "name": "Report Date",
      "check": "Extract the date of the report, typically found in the title or header section. Use the format YYYY-MM-DD.",
      "output_field": "report_date",
      "format": "string"
    },   
    {
      "name": "Trust Criteria",
      "check": "List only those explicitly mentioned (e.g., Security, Confidentiality) mainly given in management's assertion. Do not assume all five criteria are covered.",
      "output_field": "trust_criteria_covered",
      "format": "list<string>"
    },
    {
      "name": "Multi Factor Authentication Summary",
      "check": "Identify all multi factor authentication (MFA, 2FA, two‑factor, multi‑factor) related control IDs in the Security Controls Implemented section (e.g. CC6.7, CC6.8). Count how many are implemented (n_impl) out of the total expected MFA controls (n_total). Then set adoption_percentage = (n_impl / n_total) * 100. Do NOT substitute any hard‑coded numbers. Finally, return adoption_description of how MFA is enforced and the detailed related_controls list.",
      "output_field": "mfa_summary",
      "format": "object",
      "object_fields": [
        "adoption_percentage:float",
        "adoption_description:string|null",
        "related_controls:list<object>"
      ],
      "related_controls_object_fields": [
        "id (e.g. CC6.1, CC6.2, CC6.5):string",
        "description:string",
        "implemented:bool"
      ]
    },
    {
      "name": "Encryption Summary",
      "check": "Identify all data encryption related control IDs in the Security Controls Implemented section (e.g. CC6.6, CC6.7 for at‑rest and in‑transit). Count how many of those controls are implemented (n_impl) out of the total expected encryption controls (n_total). Then set encryption_coverage = (n_impl / n_total) * 100. Do NOT substitute any hard‑coded numbers. Finally, return encryption_description of how encryption is enforced (e.g., AES-256, TLS 1.2+) and the detailed related_controls list.",
      "output_field": "encryption_summary",
      "format": "object",
      "object_fields": [
        "encryption_at_rest:bool",
        "encryption_in_transit:bool",
        "encryption_coverage:float",
        "encryption_description:string|null",
        "related_controls:list<object>"
      ],
      "related_controls_object_fields": [
        "id (e.g. CC6.3, CC6.6, CC6.7, CC6.8, CC6.1):string",
        "description:string",
        "implemented:bool"
      ]
    },
    {
      "name": "Patch Timeliness Summary",
      "check": "Locate the organization’s patch management policy or control descriptions in the SOC 2 report. Extract: 1) a human‑readable `timeline_description` for how quickly patches or system updates are applied (e.g., 'within 7 days', 'within 30 days', 'regularly', 'as needed', 'timely'); 2) if a numeric duration is stated, parse `timeline_days` as an integer; 3) compute `patch_coverage` as a percentage where ≤7 days = 100%, ≤30 days = 80%, and 'regularly' or 'timely' = 100%, 'irregular' or 'manual' = 40%, 'no automation' = 20%; 4) list any related SOC 2 control objects under `related_controls` (with `id`, `description`, `implemented`). If no info is found, set all fields to null or empty.",
      "output_field": "patch_timeline_summary",
      "format": "object",
      "object_fields": [
        "timeline_description:string|null",
        "timeline_days:int|null",
        "patch_coverage:float|null",
        "related_controls:list<object>"
      ],
      "related_controls_object_fields": [
        "id (e.g. CC7.1, CC7.2, CC8.1, CC9.2):string",
        "description:string",
        "implemented:bool"
      ]
    },
    {
      "name": "Breach History",
      "check": "List all security breaches with their resolution status. Each item should include a description and a status ('resolved' or 'unresolved').",
      "output_field": "breaches",
      "format": "list<object>",
      "object_fields": ["description:string", "status:string"]
    },
    {
      "name": "Subcontractor Compliance",
      "check": "Return true if subcontractors or vendors are explicitly stated as SOC 2 or ISO 27001 compliant; also extract a short note summarizing where and how this compliance is evidenced in the report.",
      "output_field": "subcontractor_compliance",
      "format": "object",
      "object_fields": [
        "compliant:bool",
        "notes:string|null"
      ]
    },
    {
      "name": "Audit Firm",
      "check": "Extract the name of the audit firm. Return as a string. Recognize Big 4 (Deloitte, EY, PwC, KPMG) and top-tier security firms (e.g., Prescient Assurance, A-LIGN, Coalfire, etc.).",
      "output_field": "audit_firm",
      "format": "string"
    },
    {
    "name": "Audit Period",
    "check": "Extract only the audit period from the SOC 2 report content. Look specifically for the date range that defines the period covered by the audit, usually stated in the format: ‘From [start date] to [end date]’, or ‘for the period of [date] to [date]’. Ignore unrelated dates like issuance or signing.",
    "output_field": "audit_period",
    "format": "object",
    "object_fields": ["audit_period_start:string", "audit_period_end:string"]
    },
    {
    "name": "Controls Summary",
    "check": "Extract all SOC 2 controls mentioned in the report with their control IDs (e.g., CC1.1, CC6.2, etc.), descriptions, and implementation status. Look for controls in the 'Independent Service Auditor's description of Tests of Controls and Results' section and any control matrices or tables. For detailed_controls, select the MOST IMPORTANT controls from each category.",
    "output_field": "controls_summary",
    "format": "object",
    "object_fields": [
      "total_controls_identified:int",
      "controls_by_category:object",
      "detailed_controls:list<object>"
    ],
    "controls_by_category_fields": [
      "control_environment:int",
      "communication_information:int", 
      "risk_assessment:int",
      "monitoring_activities:int",
      "control_activities:int",
      "logical_physical_access:int"
    ],
    "detailed_controls_object_fields": [
      "control_id:string",
      "control_category:string",
      "description:string",
      "status:string",
      "test_result:string|null",
      "exceptions_noted:bool"
    ]
  }
  ],

  "SECURITY_CONTROLS_IMPLEMENTED": {
    "instruction": "Task: Evaluate the completeness of implemented SOC 2 controls across all covered Trust Service Criteria (TSCs) in the uploaded SOC 2 report.\n\nInstructions:\n1. Identify which Trust Service Criteria (Security, Availability, Confidentiality, Processing Integrity, Privacy) are explicitly covered in the SOC 2 report.\n2. For each TSC covered, list the mandatory common criteria and specific criteria expected (e.g., CC1.1 to CC7.x).\n3. Check whether each expected control (e.g., CC1.4.2, CC6.1.7, PI1.1, P1.2, etc.) is present in the SOC 2 report.\n4. If a control is missing, deduct 1 point per missing control from a base score of 10.\n5. Return a single JSON object under the key \"security_controls_implemented\" with these fields:\n   - Trust Service Criteria Covered: array of strings\n   - Total Controls Expected: integer\n   - Controls Missing: array of { \"ID\": string, \"Description\": string }\n   - Total implemented percentage = ((Total expected - Missing controls) / Total expected) * 100\n   - Score out of 10 = Floor of (Total implemented percentage / 10)",
    "output_field": "security_controls_implemented",
    "format": "json",
    "output_format": {
      "security_controls_implemented": {
        "trust_criteria_covered": ["Security", "Availability", "Confidentiality"],
        "total_controls_expected": 62,
        "controls_missing": [
          { "ID": "CC1.4", "Description": "Commitment to attract, develop, and retain competent individuals" }
        ],
        "implemented_percentage": 95.2,
        "score_out_of_10": 9
      }
    }
  },

  "EFFECTIVENESS_CONTROLS_PROMPT": {
    "instruction": "Task: For each of the following security effectiveness areas, check whether the control is implemented in the SOC 2 report and return any relevant sub-checks plus an overall notes field.\n\nAreas:\n- Role-Based Access (check RBAC and no privilege escalation issues)\n- MFA Enforcement (MFA for employees, VPN, etc.)\n- Incident Response (Confirm documented and tested Incident Response Procedures(IR plan))\n- Encryption (at rest and in transit)\n\nYour output must be a single JSON object under “effectiveness_controls” with these four keys. Each key’s value is an object containing:\n  • boolean fields for each sub-check  \n  • a “notes” field explaining how you determined presence/absence",
    "output_field": "effectiveness_controls",
    "format": "json",
    "output_format": {
      "effectiveness_controls": {
        "role_based_access": {
          "rbac_implemented": true,
          "no_privilege_escalation_issues": true,
          "notes": "…"
        },
        "mfa_implemented": {
          "mfa_enforced": true,
          "notes": "…"
        },
        "incident_response_tested": {
          "documented_ir_plan": true,
          "tested_ir_plan": true,
          "notes": "Incident response plan is tested annually (last test in Q4 2024)..."
        },
        "encryption_enabled": {
          "encryption_at_rest": true,
          "encryption_in_transit": true,
          "notes": "…"
        }
      }
    }
  },

  "exception_prompt": {
    "instruction": "You are a SOC 2 scoring assistant. Read the following SOC 2 report text and extract exception data according to these rules:\n\n1. Identify and list all exceptions (audit findings) where controls or processes do not meet SOC 2 criteria. For each exception, extract:\n   - description: a short summary of the finding\n   - control_area: e.g., Access Control, Encryption, Incident Response\n   - severity: Low, Medium, High\n   - major_finding: yes/no\n   - escalated_severity: if major_finding is true, escalate severity by one level (Low→Medium, Medium→High, High remains High)\n   - occurrences: number of times this finding appears\n2. Group exceptions for criticality scoring logic by severity and impacted control area:\n   - High areas: [Incident Management, Risk Management, Change Management, Logical Access, Encryption, Unauthorized Access, MFA]\n   - Medium areas: [Access Reviews, Logging & Monitoring, Backup Testing, Password Complexity, Vendor Risk]\n   - Low areas: [Employee Training, Firewall Reviews, Policy Documentation Issues]\n3. For criticality analysis, count exceptions by their original severity **and** their escalated severity if applicable.\n\n4. Identify any repeated exceptions (same description affecting multiple control areas). For each repeated exception, list:\n   - description\n   - affected_areas\n   - occurrences\n\nReturn the extracted data strictly in the following JSON format:",
    "output_format": {
      "exceptions": [
        {
          "description": "",
          "control_areas": "",
          "severity": "",
          "major_finding": false,
          "escalated_severity": ""
        }
      ],
      "exception_criticality_summary": {
        "original_severity_count": {
          "high": 0,
          "medium": 0,
          "low": 0
        },
        "escalated_severity_count": {
          "high": 0,
          "medium": 0,
          "low": 0
        },
        "major_findings": 0,
        "repeated_exceptions": [
          {
            "description": "",
            "affected_areas": [],
            "occurrences": 0
          }
        ]
      }
    }
  },
  
  "expected_output_schema": {
    "company_name": "Example Inc.",
    "company_domain": "example.com",
    "report_type": "Type II",
    "report_date": "2025-03-31",
    "trust_criteria_covered": ["Security", "Confidentiality"],
    "mfa_summary": {
      "adoption_percentage": 85.0,
      "adoption_description": "Multi factor authentication is enforced for VPN access and privileged internal systems using GlobalProtect and Active Directory policies.",
      "related_controls": [
        {
          "id": "CC6.7",
          "description": "Restricts the transmission, movement, and removal of information by requiring MFA for VPN access",
          "implemented": true
        },
        {
          "id": "CC6.8",
          "description": "Detects and prevents unauthorized or malicious software by enforcing MFA on remote logins",
          "implemented": true
        }
      ]
    },
    "encryption_summary": {
      "encryption_at_rest": true,
      "encryption_in_transit": true,
      "encryption_coverage": 85.0,
      "encryption_description": "Data is encrypted at rest using AES-256 and in transit using TLS 1.2+.",
      "related_controls": [
        {
          "id": "CC3.1",
          "description": "Encrypts sensitive data at rest",
          "implemented": true
        },
        {
          "id": "CC3.2",
          "description": "Encrypts data in transit using TLS 1.2 or higher",
          "implemented": true
        }
      ]
    },
    "patch_timeline_summary": {
      "timeline_description": "Patches are applied within 7 days of release for all critical systems.",
      "timeline_days": 7,
      "patch_coverage": 100.0,
      "related_controls": [
        {
          "id": "CC5.1",
          "description": "Identifies and applies security patches in a timely manner.",
          "implemented": true
        },
        {
          "id": "CC5.2",
          "description": "Maintains an inventory of systems and software to ensure all assets are patched.",
          "implemented": true
        }
      ]
    },
    "breaches": [
      { "description": "Example breach", "status": "resolved" }
    ],
    "subcontractor_compliance": {
      "compliant": true,
      "notes": "Section III notes that ServiceNow holds a current SOC 2 Type II report (dated 2021‑12‑31) and its controls are relied upon as complementary subservice organization controls."
    },
    "audit_firm": "Prescient Assurance LLC",
    "audit_period": {
      "audit_period_start": "2024-01-01",
      "audit_period_end": "2024-12-31"
    },
    "controls_summary": {
      "total_controls_identified": 25,
      "controls_by_category": {
        "control_environment": 5,
        "communication_information": 3,
        "risk_assessment": 4,
        "monitoring_activities": 2,
        "control_activities": 3,
        "logical_physical_access": 8
      },
      "detailed_controls": [
        {
          "control_id": "CC1.1",
          "control_category": "Control Environment",
          "description": "The entity demonstrates a commitment to integrity and ethical values",
          "status": "Implemented",
          "test_result": "No exceptions noted",
          "exceptions_noted": false
        },
        {
          "control_id": "CC6.1",
          "control_category": "Logical and Physical Access Controls",
          "description": "The entity implements logical access security software, infrastructure, and architectures over protected information assets",
          "status": "Implemented", 
          "test_result": "No exceptions noted",
          "exceptions_noted": false
        }
      ]
    },
    "security_controls_implemented": {
      "trust_criteria_covered": ["Security", "Availability", "Confidentiality"],
      "total_controls_expected": 62,
      "controls_missing": [
        { "ID": "CC1.4", "Description": "Commitment to attract…" }
      ],
      "implemented_percentage": 95.2,
      "score_out_of_10": 9
    },
    "effectiveness_controls": {
      "role_based_access": {
        "rbac_implemented": true,
        "no_privilege_escalation_issues": true,
        "notes": "…"
      },
      "mfa_implemented": {
        "mfa_enforced": true,
        "notes": "…"
      },
      "incident_response_tested": {
        "documented_ir_plan": true,
        "tested_ir_plan": true,
        "notes": "…"
      },
      "encryption_enabled": {
        "encryption_at_rest": true,
        "encryption_in_transit": true,
        "notes": "…"
      }
    },
    "exceptions": [
      {
        "description": "MFA not implemented…",
        "control_areas": ["MFA"],
        "severity": "Medium",
        "major_finding": true,
        "escalated_severity": "High",
        "occurrences": 1
      }
    ],
    "exception_criticality_summary": {
      "original_severity_count": { "high": 1, "medium": 0, "low": 0 },
      "escalated_severity_count": { "high": 1, "medium": 0, "low": 0 },
      "major_findings": 1,
      "repeated_exceptions": []
    }
  }
}
